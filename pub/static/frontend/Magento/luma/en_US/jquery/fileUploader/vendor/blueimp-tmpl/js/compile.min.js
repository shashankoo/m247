#!/usr/bin/env node;(function(){'use strict'
var path=require('path')
var tmpl=require(path.join(__dirname,'tmpl.js'))
var fs=require('fs')
var runtime=fs.readFileSync(path.join(__dirname,'runtime.js'),'utf8')
var regexp=/<script( id="([\w-]+)")? type="text\/x-tmpl"( id="([\w-]+)")?>([\s\S]+?)<\/script>/gi
var helperRegexp=new RegExp(tmpl.helper.match(/\w+(?=\s*=\s*function\s*\()/g).join('\\s*\\(|')+'\\s*\\(')
var list=[]
var code
tmpl.print=function(str){var helper=helperRegexp.test(str)?tmpl.helper:''
var body=str.replace(tmpl.regexp,tmpl.func)
if(helper||/_e\s*\(/.test(body)){helper='_e=tmpl.encode'+helper+','}
return('function('+
tmpl.arg+',tmpl){'+
('var '+helper+"_s='"+body+"';return _s;").split("_s+='';").join('')+'}')}
process.argv.forEach(function(file,index){var listLength=list.length
var stats
var content
var result
var id
if(index>1){stats=fs.statSync(file)
if(!stats.isFile()){console.error(file+' is not a file.')
return}
content=fs.readFileSync(file,'utf8')
while(true){result=regexp.exec(content)
if(!result){break}
id=result[2]||result[4]
list.push("'"+id+"':"+tmpl.print(result[5]))}
if(listLength===list.length){id=path.basename(file,path.extname(file))
list.push("'"+id+"':"+tmpl.print(content))}}})
if(!list.length){console.error('Missing input file.')
return}
code=runtime.replace('{}','{'+list.join(',')+'}')
console.log(code)})()