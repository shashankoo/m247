;(function(factory){'use strict'
if(typeof define==='function'&&define.amd){define(['jquery/fileUploader/vendor/blueimp-load-image/js/load-image'],factory)}else if(typeof module==='object'&&module.exports){factory(require('jquery/fileUploader/vendor/blueimp-load-image/js/load-image'))}else{factory(window.loadImage)}})(function(loadImage){'use strict'
var global=loadImage.global
if(global.fetch&&global.Request&&global.Response&&global.Response.prototype.blob){loadImage.fetchBlob=function(url,callback,options){function responseHandler(response){return response.blob()}
if(global.Promise&&typeof callback!=='function'){return fetch(new Request(url,callback)).then(responseHandler)}
fetch(new Request(url,options)).then(responseHandler).then(callback)
['catch'](function(err){callback(null,err)})}}else if(global.XMLHttpRequest&&new XMLHttpRequest().responseType===''){loadImage.fetchBlob=function(url,callback,options){function executor(resolve,reject){options=options||{}
var req=new XMLHttpRequest()
req.open(options.method||'GET',url)
if(options.headers){Object.keys(options.headers).forEach(function(key){req.setRequestHeader(key,options.headers[key])})}
req.withCredentials=options.credentials==='include'
req.responseType='blob'
req.onload=function(){resolve(req.response)}
req.onerror=req.onabort=req.ontimeout=function(err){if(resolve===reject){reject(null,err)}else{reject(err)}}
req.send(options.body)}
if(global.Promise&&typeof callback!=='function'){options=callback
return new Promise(executor)}
return executor(callback,callback)}}})